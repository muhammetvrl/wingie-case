type Query {
  Users: [User] @listLength(min:3, max: 20)
	User:  UserDetail
}


type UserDetail {
  name: String @fake(type: firstName)
  age: Int @examples(values: [20 25 30 35])
  gender: String @examples(values: ["male", "female"])
  address: Address
  id: ID,
  avatar: String @examples(values: ["https://leafac.github.io/fake-avatars/avatars/webp/1.webp", "https://leafac.github.io/fake-avatars/avatars/webp/2.webp", "https://leafac.github.io/fake-avatars/avatars/webp/3.webp", "https://leafac.github.io/fake-avatars/avatars/webp/4.webp", "https://leafac.github.io/fake-avatars/avatars/webp/5.webp", "https://leafac.github.io/fake-avatars/avatars/webp/6.webp", "https://leafac.github.io/fake-avatars/avatars/webp/7.webp", "https://leafac.github.io/fake-avatars/avatars/webp/8.webp", "https://leafac.github.io/fake-avatars/avatars/webp/9.webp"])
  birthday: String @fake(type: date)
  email: String @fake(type:email)
  count: Int @examples(values: 0)
	phone: String @fake(type: phoneNumber)
}

type User {
  name: String @fake(type: firstName)
  age: Int @examples(values: [20 25 30 35])
  gender: String @examples(values: ["male", "female"])
  id: ID,
  avatar: String @examples(values: ["https://leafac.github.io/fake-avatars/avatars/webp/1.webp", "https://leafac.github.io/fake-avatars/avatars/webp/2.webp", "https://leafac.github.io/fake-avatars/avatars/webp/3.webp", "https://leafac.github.io/fake-avatars/avatars/webp/4.webp", "https://leafac.github.io/fake-avatars/avatars/webp/5.webp", "https://leafac.github.io/fake-avatars/avatars/webp/6.webp", "https://leafac.github.io/fake-avatars/avatars/webp/7.webp", "https://leafac.github.io/fake-avatars/avatars/webp/8.webp", "https://leafac.github.io/fake-avatars/avatars/webp/9.webp"])
  birthday: String @fake(type: date)
  email: String @fake(type:email)
  count: Int @examples(values: 0)
}

type Address {
  street: String @fake(type: streetName)
  number: Int @examples(values: [303 409])
  city: String @fake(type: city)
  state: String @fake(type: stateAbbr)
  country: String @fake(type: country)
}

input UserInput {
  id: ID
  name: String
  age: Int,
  gender: String
  address: AddressInput
  avatar: String
  birthday: String
  email: String
  count: Int
}

input AddressInput {
  street: String
  number: Int
  city: String
  state: String
  country: String
}

type Mutation {
  CreateUser(user: UserInput): User
}
